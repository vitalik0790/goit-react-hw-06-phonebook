{"version":3,"sources":["components/phoneBook/contactList/ContactList.module.css","components/phoneBook/PhoneBook.module.css","components/phoneBook/notification/Notification.module.css","components/phoneBook/empty/Empty.module.css","components/phoneBook/contactFilter/ContactFilter.module.css","redux/contacts/contactsActions.js","components/phoneBook/notification/Notification.js","components/phoneBook/empty/Empty.js","components/phoneBook/contactForm/ContactForm.js","components/phoneBook/contactList/ContactList.js","components/phoneBook/contactFilter/ContactFilter.js","components/phoneBook/PhoneBook.js","components/App.js","redux/contacts/contactsReducers.js","redux/store.js","index.js","components/phoneBook/contactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","contact","id","uuidv4","deleteContact","onHandleFilter","addToLocalStorage","Notification","className","Styles","NotificationWrapper","Empty","ContactForm","state","newContact","showAlert","showEmpty","handleChange","e","target","setState","value","handleSubmit","preventDefault","props","contacts","some","setTimeout","localStorage","getItem","this","JSON","parse","prevProps","setItem","stringify","onSubmit","s","form","label","input","type","onChange","button","CSSTransition","in","timeout","classNames","unmountOnExit","Component","mapDispatchToProps","contactsActions","connect","contactList","normalizeFilter","filter","toLowerCase","includes","dispatch","onHandleDelete","dataset","TransitionGroup","component","list","map","listItem","data-id","onClick","PhoneBook","appear","title","length","App","createReducer","action","_","combineReducers","store","configureStore","reducer","contactsReducers","ReactDOM","render","document","getElementById"],"mappings":"oFACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,SAAW,8BAA8B,OAAS,4BAA4B,KAAO,0BAA0B,MAAQ,2BAA2B,YAAc,iCAAiC,KAAO,0BAA0B,WAAa,kC,mBCAlSD,EAAOC,QAAU,CAAC,OAAS,0BAA0B,aAAe,gCAAgC,MAAQ,yBAAyB,MAAQ,yBAAyB,YAAc,+BAA+B,KAAO,wBAAwB,WAAa,gC,mBCA/PD,EAAOC,QAAU,CAAC,oBAAsB,0CAA0C,OAAS,6BAA6B,aAAe,mCAAmC,KAAO,2BAA2B,WAAa,mC,mBCAzND,EAAOC,QAAU,CAAC,oBAAsB,mCAAmC,OAAS,sBAAsB,aAAe,4BAA4B,KAAO,oBAAoB,WAAa,4B,mBCA7LD,EAAOC,QAAU,CAAC,MAAQ,+B,0LCkBX,GACXC,WAjBeC,YAAa,gBAAgB,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,MAAuB,CACnEC,QAAS,CACLC,QAAS,CACLC,GAAIC,cACJL,OACAC,eAaRK,cARkBP,YAAa,mBAS/BQ,eAPmBR,YAAa,yBAQhCS,kBANsBT,YAAa,+B,iBCNxBU,EARM,SAAC,GAAc,IAAZT,EAAW,EAAXA,KACpB,OACI,qBAAKU,UAAWC,IAAOC,oBAAvB,mBACQZ,EADR,8B,iBCMOa,EARD,WACV,OACI,qBAAKH,UAAWC,IAAOC,oBAAvB,yC,wBCGFE,E,4MACFC,MAAQ,CACJf,KAAM,GACNC,OAAQ,GACRe,WAAY,KACZC,WAAW,EACXC,WAAW,G,EAmBfC,aAAe,SAACC,GACZ,IAAMpB,EAAOoB,EAAEC,OAAOrB,KACtB,EAAKsB,SAAL,eAAiBtB,EAAOoB,EAAEC,OAAOE,S,EAGrCC,aAAe,SAACJ,GACZA,EAAEK,iBACE,EAAKC,MAAMC,SAASC,MAAK,SAAAzB,GAAO,OAAIA,EAAQH,OAAS,EAAKe,MAAMf,SAChE,EAAKsB,SAAS,CAAEN,WAAY,EAAKD,MAAMf,KAAMiB,WAAW,IACxDY,YAAW,WACP,EAAKP,SAAS,CAAEL,WAAW,MAC5B,OAEwB,KAApB,EAAKF,MAAMf,MAAsC,KAAvB,EAAKe,MAAMZ,SAC5C,EAAKmB,SAAS,CAAEJ,WAAW,IAC3BW,YAAW,WACP,EAAKP,SAAS,CAAEJ,WAAW,MAC5B,OAIH,EAAKQ,MAAM5B,WAAW,CAAEE,KAAM,EAAKe,MAAMf,KAAMC,OAAQ,EAAKc,MAAMd,SAEtE,EAAKqB,SAAS,CAAEtB,KAAM,GAAIC,OAAQ,M,kEAtClC,IAAM0B,EAAWG,aAAaC,QAAQ,YAElCJ,GACAK,KAAKN,MAAMlB,kBAAkByB,KAAKC,MAAMP,M,yCAI7BQ,GAAY,IACnBR,EAAaK,KAAKN,MAAlBC,SAEJQ,EAAUR,WAAaA,GACvBG,aAAaM,QAAQ,WAAYH,KAAKI,UAAUV,M,+BAgC9C,IAAD,EAEwCK,KAAKjB,MAA1CC,EAFH,EAEGA,WAAYC,EAFf,EAEeA,UAAWC,EAF1B,EAE0BA,UAC/B,OACI,gCACI,uBAAMoB,SAAUN,KAAKR,aAAcd,UAAW6B,IAAEC,KAAhD,UACI,wBAAO9B,UAAW6B,IAAEE,MAApB,iBAEA,uBAAO/B,UAAW6B,IAAEG,MAAO1C,KAAK,OAAO2C,KAAK,OAAOpB,MAAOS,KAAKjB,MAAMf,KAAM4C,SAAUZ,KAAKb,kBAE1F,wBAAOT,UAAW6B,IAAEE,MAApB,mBAEA,uBAAO/B,UAAW6B,IAAEG,MAAO1C,KAAK,SAAS2C,KAAK,MAAMpB,MAAOS,KAAKjB,MAAMd,OAAQ2C,SAAUZ,KAAKb,kBAE7F,wBAAQT,UAAW6B,IAAEM,OAAQF,KAAK,SAAlC,4BAEJ,cAACG,EAAA,EAAD,CAAeC,GAAI9B,EAAW+B,QAAS,IAAKC,WAAYV,IAAGW,eAAa,EAAxE,SACI,cAAC,EAAD,CAAclD,KAAMgB,MAExB,cAAC8B,EAAA,EAAD,CAAeC,GAAI7B,EAAW8B,QAAS,IAAKC,WAAYV,IAAGW,eAAa,EAAxE,SACI,cAAC,EAAD,a,GAzEMC,aAgFpBC,EAAqB,CACvBtD,WAAYuD,EAAgBvD,WAC5BU,kBAAmB6C,EAAgB7C,mBASxB8C,eANS,SAACvC,GACrB,MAAO,CACHY,SAAUZ,EAAMY,SAAS4B,eAIOH,EAAzBE,CAA6CxC,G,yBCxB7CwC,eA3BS,SAAAvC,GAAU,IAAD,EAEGA,EAAMY,SAA9B4B,EAFqB,EAErBA,YACFC,EAHuB,EAERC,OACUC,cAK/B,MAAO,CACH/B,SAJoB4B,EAAYE,QAAO,SAAAtD,GAAO,OAC9CA,EAAQH,KAAK0D,cAAcC,SAASH,UAQjB,SAACI,GACxB,MAAO,CACHtD,cAAe,SAACF,GACZwD,EAASP,EAAgB/C,cAAcF,QAUpCkD,EApEK,SAAC,GAAiC,IAA/B3B,EAA8B,EAA9BA,SAAUrB,EAAoB,EAApBA,cAEvBuD,EAAiB,SAACzC,GACpB,IAAMhB,EAAKgB,EAAEC,OAAOyC,QAAQ1D,GAC5BE,EAAcF,IAKlB,OACI,gCACI,0CACA,cAAC2D,EAAA,EAAD,CAAiBC,UAAU,KAAKtD,UAAW6B,IAAE0B,KAA7C,SACKtC,EAASuC,KAAI,SAAA/D,GACV,OACI,cAAC2C,EAAA,EAAD,CAEIE,QAAS,IACTC,WAAYV,IAHhB,SAII,qBAAI7B,UAAW6B,IAAE4B,SAAjB,UACI,sBAAMzD,UAAW6B,IAAEvC,KAAnB,SAA0BG,EAAQH,OADtC,KACoD,+BAAOG,EAAQF,SAC/D,wBAAQS,UAAW6B,IAAEM,OAAQF,KAAK,SAASyB,UAASjE,EAAQC,GAAIiE,QAASR,EAAzE,wBALC1D,EAAQC,e,iBCMnCgD,EAAqB,CACvB7C,eAAgB8C,EAAgB9C,gBAGrB+C,eARS,SAAAvC,GAAK,MAAK,CAC9BQ,MAAOR,EAAMY,SAAS8B,UAOcL,EAAzBE,EA3BO,SAAC,GAA+B,IAA7B/B,EAA4B,EAA5BA,MAAOhB,EAAqB,EAArBA,eAE5B,OACI,gCACI,uDACA,uBAAOG,UAAW6B,IAAEG,MAChBC,KAAK,OACLpB,MAAOA,EACPqB,SAAU,SAACxB,GAAD,OAAOb,EAAea,EAAEC,OAAOE,gB,iBCHnD+C,E,uKAGE,OACI,gCACI,cAACxB,EAAA,EAAD,CACIC,IAAI,EACJwB,QAAQ,EACRvB,QAAS,IACTC,WAAYV,IAJhB,SAMI,oBAAI7B,UAAW6B,IAAEiC,MAAjB,yBAGJ,cAAC,EAAD,IAECxC,KAAKN,MAAMC,SAAS8C,OAAS,GAC1B,cAAC,EAAD,IAEJ,cAAC,EAAD,W,GAnBQtB,aA+BTG,eANS,SAACvC,GACrB,MAAO,CACHY,SAAUZ,EAAMY,SAAS4B,eAIlBD,CAAyBgB,GC/BzBI,EANH,WACR,OACI,cAAC,EAAD,K,eCIFnB,EAAcoB,YAAc,IAAD,mBAC5BtB,EAAgBvD,YARF,SAACiB,EAAO6D,GACvB,MAAM,GAAN,mBAAW7D,GAAX,CAAkB6D,EAAO1E,QAAQC,aAMJ,cAE5BkD,EAAgB/C,eANC,SAACS,EAAO6D,GAC1B,OAAO7D,EAAM0C,QAAO,SAAAtD,GAAO,OAAIA,EAAQC,KAAOwE,EAAO1E,cAGxB,cAG5BmD,EAAgB7C,mBAAoB,SAACqE,EAAGD,GAAJ,OAAeA,EAAO1E,WAH9B,IAM3BuD,EAASkB,YAAc,GAAD,eACvBtB,EAAgB9C,gBAAiB,SAACsE,EAAGD,GAAJ,OAAeA,EAAO1E,YAK7C4E,cAAgB,CAC3BvB,cACAE,WChBWsB,EANDC,YAAe,CACzBC,QAAS,CACLtD,SAAUuD,K,MCElBC,IAASC,OACL,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACI,cAAC,EAAD,MAEJM,SAASC,eAAe,U,kBCV5B1F,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,4BAA4B,MAAQ,2BAA2B,YAAc,iCAAiC,KAAO,0BAA0B,WAAa,mC","file":"static/js/main.642797ca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3HLiV\",\"listItem\":\"ContactList_listItem__3jWlM\",\"button\":\"ContactList_button__36skX\",\"name\":\"ContactList_name__3dSRw\",\"enter\":\"ContactList_enter__VCDc1\",\"enterActive\":\"ContactList_enterActive__1peDQ\",\"exit\":\"ContactList_exit__6STL3\",\"exitActive\":\"ContactList_exitActive__3d_fM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"PhoneBook_appear__1iphc\",\"appearActive\":\"PhoneBook_appearActive__HN9CD\",\"title\":\"PhoneBook_title__3YER3\",\"enter\":\"PhoneBook_enter__22CX5\",\"enterActive\":\"PhoneBook_enterActive__iv_qA\",\"exit\":\"PhoneBook_exit__3mIVP\",\"exitActive\":\"PhoneBook_exitActive__16kw4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotificationWrapper\":\"Notification_NotificationWrapper__3ENjU\",\"appear\":\"Notification_appear__3_84N\",\"appearActive\":\"Notification_appearActive__3JFQH\",\"exit\":\"Notification_exit__23375\",\"exitActive\":\"Notification_exitActive__MTPXx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotificationWrapper\":\"Empty_NotificationWrapper__1dgPi\",\"appear\":\"Empty_appear__3pOJ5\",\"appearActive\":\"Empty_appearActive__1dMyK\",\"exit\":\"Empty_exit__1s2xL\",\"exitActive\":\"Empty_exitActive__3GkHD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactFilter_input__QJJUz\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst addContact = createAction(\"contacts/add\", ({ name, number }) => ({\r\n    payload: {\r\n        contact: {\r\n            id: uuidv4(),\r\n            name,\r\n            number,\r\n        }\r\n    }\r\n}));\r\n\r\nconst deleteContact = createAction(\"contacts/remove\");\r\n\r\nconst onHandleFilter = createAction(\"contacts/handleFilter\");\r\n\r\nconst addToLocalStorage = createAction(\"contacts/addToLocalStorage\");\r\n\r\nexport default {\r\n    addContact,\r\n    deleteContact,\r\n    onHandleFilter,\r\n    addToLocalStorage,\r\n}\r\n\r\n// const addContact = ({ name, number }) => ({\r\n//     type: actionTypes.ADD,\r\n//     payload: {\r\n//         contact: {\r\n//             id: uuidv4(),\r\n//             name,\r\n//             number,\r\n//         }\r\n//     }\r\n// })\r\n\r\n\r\n// const deleteContact = (id) => ({\r\n//     type: actionTypes.REMOVE,\r\n//     payload: {\r\n//         id,\r\n//     }\r\n// })\r\n\r\n// const onHandleFilter = (filter) => ({\r\n//     type: actionTypes.VALUE,\r\n//     payload: {\r\n//         filter,\r\n//     }\r\n// })\r\n\r\n","import React from 'react'\r\nimport Styles from './Notification.module.css'\r\n\r\nconst Notification = ({ name }) => {\r\n    return (\r\n        <div className={Styles.NotificationWrapper}>\r\n            {`${name} is already in Contacts`}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notification;","import React from 'react'\r\nimport Styles from './Empty.module.css'\r\n\r\nconst Empty = () => {\r\n    return (\r\n        <div className={Styles.NotificationWrapper}>\r\n            {`ALL FIELDS MUST BE FILLED!`}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Empty;","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../../redux/contacts/contactsActions\";\r\nimport Notification from '../notification/Notification';\r\nimport Empty from '../empty/Empty';\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n        newContact: null,\r\n        showAlert: false,\r\n        showEmpty: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        const contacts = localStorage.getItem(\"contacts\");\r\n\r\n        if (contacts) {\r\n            this.props.addToLocalStorage(JSON.parse(contacts));\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { contacts } = this.props;\r\n\r\n        if (prevProps.contacts !== contacts) {\r\n            localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const name = e.target.name;\r\n        this.setState({ [name]: e.target.value })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (this.props.contacts.some(contact => contact.name === this.state.name)) {\r\n            this.setState({ newContact: this.state.name, showAlert: true })\r\n            setTimeout(() => {\r\n                this.setState({ showAlert: false })\r\n            }, 2500);\r\n\r\n        } else if (this.state.name === \"\" || this.state.contact === \"\") {\r\n            this.setState({ showEmpty: true })\r\n            setTimeout(() => {\r\n                this.setState({ showEmpty: false })\r\n            }, 2500);\r\n\r\n        } else {\r\n\r\n            this.props.addContact({ name: this.state.name, number: this.state.number })\r\n        }\r\n        this.setState({ name: '', number: \"\" })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { newContact, showAlert, showEmpty } = this.state;\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit} className={s.form}>\r\n                    <label className={s.label}>\r\n                        Name\r\n                    <input className={s.input} name=\"name\" type=\"text\" value={this.state.name} onChange={this.handleChange}></input>\r\n                    </label>\r\n                    <label className={s.label}>\r\n                        Number\r\n                    <input className={s.input} name=\"number\" type=\"tel\" value={this.state.number} onChange={this.handleChange}></input>\r\n                    </label>\r\n                    <button className={s.button} type=\"submit\">Add contact</button>\r\n                </form>\r\n                <CSSTransition in={showAlert} timeout={250} classNames={s} unmountOnExit>\r\n                    <Notification name={newContact} />\r\n                </CSSTransition>\r\n                <CSSTransition in={showEmpty} timeout={250} classNames={s} unmountOnExit>\r\n                    <Empty />\r\n                </CSSTransition>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addContact: contactsActions.addContact,\r\n    addToLocalStorage: contactsActions.addToLocalStorage,\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: state.contacts.contactList,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport contactsActions from '../../../redux/contacts/contactsActions'\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => {\r\n\r\n    const onHandleDelete = (e) => {\r\n        const id = e.target.dataset.id;\r\n        deleteContact(id);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>Contacts</h2>\r\n            <TransitionGroup component='ul' className={s.list}>\r\n                {contacts.map(contact => {\r\n                    return (\r\n                        <CSSTransition\r\n                            key={contact.id}\r\n                            timeout={250}\r\n                            classNames={s}>\r\n                            <li className={s.listItem}>\r\n                                <span className={s.name}>{contact.name}</span>: <span>{contact.number}</span>\r\n                                <button className={s.button} type=\"button\" data-id={contact.id} onClick={onHandleDelete}>Delete</button>\r\n                            </li>\r\n                        </CSSTransition>)\r\n                })}\r\n            </TransitionGroup>\r\n        </div>\r\n    );\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            name: PropTypes.string,\r\n            number: PropTypes.string,\r\n            id: PropTypes.string,\r\n        }),\r\n    ),\r\n    deleteContact: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    const { contactList, filter } = state.contacts;\r\n    const normalizeFilter = filter.toLowerCase();\r\n\r\n    const filtredContacts = contactList.filter(contact =>\r\n        contact.name.toLowerCase().includes(normalizeFilter));\r\n\r\n    return {\r\n        contacts: filtredContacts\r\n    }\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteContact: (id) => {\r\n            dispatch(contactsActions.deleteContact(id));\r\n        },\r\n\r\n        // getFiltredContacts: ({ contacts, filter }) => {\r\n        //     dispatch(contactsActions.getFiltredContacts())\r\n        // }\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport contactsActions from '../../../redux/contacts/contactsActions'\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactFilter.module.css';\r\n\r\nconst ContactFilter = ({ value, onHandleFilter }) => {\r\n\r\n    return (\r\n        <div>\r\n            <h3>Find contacts by name</h3>\r\n            <input className={s.input}\r\n                type=\"text\"\r\n                value={value}\r\n                onChange={(e) => onHandleFilter(e.target.value)}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nContactFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onHandleFilter: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    value: state.contacts.filter,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    onHandleFilter: contactsActions.onHandleFilter,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactFilter);","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport ContactForm from './contactForm/ContactForm'\r\nimport ContactList from './contactList/ContactList';\r\nimport ContactFilter from './contactFilter/ContactFilter';\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport s from './PhoneBook.module.css';\r\n// import Notification from './notification/Notification';\r\n// import Empty from './empty/Empty';\r\n\r\n\r\nclass PhoneBook extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <CSSTransition\r\n                    in={true}\r\n                    appear={true}\r\n                    timeout={500}\r\n                    classNames={s}\r\n                >\r\n                    <h1 className={s.title}>Phonebook</h1>\r\n                </CSSTransition>\r\n\r\n                <ContactForm />\r\n\r\n                {this.props.contacts.length > 1 &&\r\n                    <ContactFilter />\r\n                }\r\n                <ContactList />\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: state.contacts.contactList,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PhoneBook);\r\n","import React from 'react';\r\nimport './App.css';\r\nimport PhoneBook from './phoneBook/PhoneBook';\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <PhoneBook />\r\n    );\r\n}\r\n\r\nexport default App;","import { combineReducers } from \"redux\";\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactsActions from './contactsActions';\r\n\r\nconst addContact = (state, action) => {\r\n    return [...state, action.payload.contact];\r\n};\r\nconst removeContact = (state, action) => {\r\n    return state.filter(contact => contact.id !== action.payload);\r\n};\r\n\r\nconst contactList = createReducer([], {\r\n    [contactsActions.addContact]: addContact,\r\n    [contactsActions.deleteContact]: removeContact,\r\n    [contactsActions.addToLocalStorage]: (_, action) => action.payload,\r\n})\r\n\r\nconst filter = createReducer(\"\", {\r\n    [contactsActions.onHandleFilter]: (_, action) => action.payload,\r\n})\r\n\r\n\r\n\r\nexport default combineReducers({\r\n    contactList,\r\n    filter,\r\n})\r\n\r\n\r\n\r\n// const contactList = (state = [], { type, payload }) => {\r\n    //     switch (type) {\r\n        //         case contactsActions.addContact.type:\r\n        //             return [...state, payload.contact];\r\n\r\n        //         case contactsActions.deleteContact.type:\r\n        //             return state.filter(contact => contact.id !== payload)\r\n\r\n        //         default:\r\n        //             return state;\r\n        //     }\r\n        // };\r\n\r\n\r\n        // const filter = (state = \"\", { type, payload }) => {\r\n        //     switch (type) {\r\n        //         case contactsActions.onHandleFilter.type:\r\n        //             return payload;\r\n\r\n        //         default:\r\n        //             return state;\r\n        //     }\r\n        // };","import contactsReducers from \"./contacts/contactsReducers\";\r\nimport { configureStore } from '@reduxjs/toolkit';\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: contactsReducers\r\n    }\r\n});\r\n\r\nexport default store;\r\n\r\n\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from 'react-redux';\nimport App from \"./components/App\";\nimport store from './redux/store';\nimport \"./index.css\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3ByxU\",\"label\":\"ContactForm_label__167ST\",\"input\":\"ContactForm_input__3i43o\",\"button\":\"ContactForm_button__xpCZW\",\"enter\":\"ContactForm_enter__2CcHt\",\"enterActive\":\"ContactForm_enterActive__3DMAv\",\"exit\":\"ContactForm_exit__2uVZp\",\"exitActive\":\"ContactForm_exitActive__1hnah\"};"],"sourceRoot":""}